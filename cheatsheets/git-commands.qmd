---
title: "Git Commands Cheatsheet"
author: "Junaid Butt"
date: "2024-01-22"
categories: [git, version control]
description: "Essential Git commands for daily development work."
---

# Git Commands Cheatsheet

## Basic Workflow

```bash
# Initialize repository
git init

# Check status
git status

# Stage files
git add .                    # Add all files
git add filename.txt         # Add specific file
git add *.py                # Add all Python files

# Commit changes
git commit -m "commit message"
git commit -am "commit message"  # Stage and commit

# Push to remote
git push origin main
git push -u origin main      # Set upstream and push
```

## Branching

```bash
# List branches
git branch                   # Local branches
git branch -r               # Remote branches
git branch -a               # All branches

# Create branch
git branch feature-branch
git checkout -b feature-branch  # Create and switch

# Switch branches
git checkout main
git switch feature-branch    # Modern syntax

# Merge branch
git checkout main
git merge feature-branch

# Delete branch
git branch -d feature-branch    # Delete merged branch
git branch -D feature-branch    # Force delete
```

## Remote Operations

```bash
# Add remote
git remote add origin https://github.com/user/repo.git

# List remotes
git remote -v

# Fetch changes
git fetch origin
git fetch --all

# Pull changes
git pull origin main
git pull --rebase origin main

# Push branch
git push origin feature-branch
```

## History and Logs

```bash
# View commit history
git log
git log --oneline
git log --graph --oneline --all

# Show specific commit
git show commit-hash

# View file history
git log -p filename.txt

# Search commits
git log --grep="bug fix"
git log --author="John Doe"
```

## Undoing Changes

```bash
# Unstage files
git reset filename.txt
git reset                   # Unstage all

# Discard changes
git checkout -- filename.txt
git restore filename.txt    # Modern syntax

# Undo last commit (keep changes)
git reset --soft HEAD~1

# Undo last commit (discard changes)
git reset --hard HEAD~1

# Revert commit (create new commit)
git revert commit-hash
```

## Stashing

```bash
# Stash changes
git stash
git stash save "work in progress"

# List stashes
git stash list

# Apply stash
git stash apply
git stash apply stash@{2}

# Pop stash (apply and remove)
git stash pop

# Drop stash
git stash drop stash@{1}
```

## Tagging

```bash
# Create tag
git tag v1.0
git tag -a v1.0 -m "Version 1.0"

# List tags
git tag

# Push tags
git push origin v1.0
git push origin --tags

# Delete tag
git tag -d v1.0
git push origin --delete v1.0
```

## Configuration

```bash
# Set user info
git config --global user.name "Your Name"
git config --global user.email "your.email@example.com"

# Set default editor
git config --global core.editor "code --wait"

# Set default branch name
git config --global init.defaultBranch main

# View configuration
git config --list
git config user.name
```

---

*Last updated: January 2024*